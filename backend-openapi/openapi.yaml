openapi: '3.0.0'
info:
  title: web-crawler
  description: HTTP-based endpoint
  version: '1.0.0'
paths:
  /api/v1/records:
    get:
      operationId: getAllRecords
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecordFull'
        '5XX':
          description: 'Internal Server Error'
    post:
      operationId: createRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordBase'
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordId'
        '5XX':
          description: 'Internal Server Error'
  /api/v1/records/{recId}:
    put:
      operationId: updateRecord
      parameters:
        - name: recId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordBase'
      responses:
        '204':
          description: 'Updated'
        '404':
          description: 'Not Found'
        '5XX':
          description: 'Unexpected Server Error'
    delete:
      operationId: deleteRecord
      parameters:
        - name: recId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '204':
          description: 'Deleted'
        '404':
          description: 'Not Found'
        '5XX':
          description: 'Internal Server Error'
components:
  schemas:
    EntityId:
      type: integer
      format: int64
      minimum: 1
    RecordId:
      type: object
      properties:
        recId:
          $ref: '#/components/schemas/EntityId'
      required:
        - recId
    RecordTag:
      type: string
      minLength: 1
    RecordBase:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: 'Entry point of crawling.'
          example: 'http://www.example.com/'
        label:
          type: string
          description: 'User-defined label.'
          minLength: 1
          example: 'Example website'
        active:
          type: boolean
          description: 'Active records are crawled based on the periodicity.'
          example: true
        period:
          type: integer
          format: int64
          minimum: 1
          description: 'Periodicity of crawling in minutes.'
          example: 10
        regexp:
          type: string
          description: 'Boundary regular expression.'
          minLength: 1
          example: '*'
        tags:
          type: array
          description: 'User-defined keywords.'
          items:
            $ref: '#/components/schemas/RecordTag'
          example: [ 'a', 'b', 'c' ]
      required:
        - url
        - label
        - active
        - period
        - regexp
        - tags
    ExecutionStatus:
      type: number
      format: int32
      minimum: 0
      maximum: 3
    ExecutionTime:
      type: string
      format: date-time
      nullable: true
    RecordExecRef:
      type: object
      properties:
        lastExecStatus:
          $ref: '#/components/schemas/ExecutionStatus'
          description: 'Current status of the last execution.'
        lastExecEndTime:
          $ref: '#/components/schemas/ExecutionTime'
          description: 'End time of the last execution.'
        lastExecStartTime:
          $ref: '#/components/schemas/ExecutionTime'
          description: 'End time of the last execution.'
      required:
        - lastExecStatus
        - lastExecEndTime
        - lastExecStartTime
    RecordFull:
      allOf:
        - $ref: '#/components/schemas/RecordId'
        - $ref: '#/components/schemas/RecordBase'
        - $ref: '#/components/schemas/RecordExecRef'
